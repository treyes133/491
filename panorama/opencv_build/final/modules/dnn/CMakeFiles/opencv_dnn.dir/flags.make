# CMAKE generated file: DO NOT EDIT!
# Generated by "MinGW Makefiles" Generator, CMake Version 3.6

# compile CXX with C:/MinGW/bin/g++.exe
# compile RC with C:/MinGW/bin/windres.exe
CXX_FLAGS =    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security  -Wundef -Winit-self -Wpointer-arith -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -Wno-missing-field-initializers -fdiagnostics-show-option -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -mfpmath=sse -fvisibility=hidden -fvisibility-inlines-hidden -Wno-deprecated -Wno-missing-declarations -Wno-shadow -Wno-unused-parameter -Wno-sign-compare -Wno-invalid-offsetof -O3 -DNDEBUG  -DNDEBUG   -std=c++11

CXX_DEFINES = -DCVAPI_EXPORTS -DCV_OCL4DNN=1 -DHAVE_PROTOBUF=1 -D_USE_MATH_DEFINES -D__OPENCV_BUILD=1 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS

CXX_INCLUDES = @CMakeFiles/opencv_dnn.dir/includes_CXX.rsp

RC_FLAGS =    

RC_DEFINES = -DCVAPI_EXPORTS -DCV_OCL4DNN=1 -DHAVE_PROTOBUF=1 -D_USE_MATH_DEFINES -D__OPENCV_BUILD=1 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS

RC_INCLUDES = -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\final -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\dnn\src -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\dnn\include -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\final\modules\dnn -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\core\include -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\imgproc\include -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\dnn\misc\caffe -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\dnn\misc\tensorflow -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\dnn\misc\onnx -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\3rdparty\include\opencl\1.2 -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\3rdparty\protobuf\src 

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/tensorflow/attr_value.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/tensorflow/function.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/tensorflow/graph.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/tensorflow/op_def.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/tensorflow/tensor.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/tensorflow/tensor_shape.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/tensorflow/types.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/tensorflow/versions.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/caffe/opencv-caffe.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/misc/onnx/opencv-onnx.pb.cc.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/caffe/caffe_importer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/caffe/caffe_io.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/caffe/caffe_shrinker.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/darknet/darknet_importer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/darknet/darknet_io.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/dnn.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/halide_scheduler.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/init.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/batch_norm_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/blank_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/concat_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/convolution_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/crop_and_resize_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/crop_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/detection_output_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/elementwise_layers.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/eltwise_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/flatten_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/fully_connected_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/layers_common.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/lrn_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/max_unpooling_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/mvn_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/normalize_bbox_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/padding_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/permute_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/pooling_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/prior_box_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/proposal_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/recurrent_layers.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/region_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/reorg_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/reshape_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/resize_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/scale_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/shuffle_channel_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/slice_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/softmax_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/layers/split_layer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/nms.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/ocl4dnn/src/common.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/ocl4dnn/src/math_functions.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/ocl4dnn/src/ocl4dnn_conv_spatial.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/ocl4dnn/src/ocl4dnn_inner_product.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/ocl4dnn/src/ocl4dnn_lrn.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/ocl4dnn/src/ocl4dnn_pool.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/ocl4dnn/src/ocl4dnn_softmax.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/onnx/onnx_importer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/op_halide.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/op_inf_engine.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/op_vkcom.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/tensorflow/tf_graph_simplifier.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/tensorflow/tf_importer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/tensorflow/tf_io.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/torch/THDiskFile.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/torch/THFile.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/torch/THGeneral.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/torch/torch_importer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/avg_pool_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/concat_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/conv_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/dw_conv_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/lrn_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/max_pool_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/permute_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/prior_box_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/relu_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/shader/softmax_spv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/buffer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/context.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/internal.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/op_base.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/op_concat.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/op_conv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/op_lrn.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/op_permute.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/op_pool.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/op_prior_box.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/op_relu.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/op_softmax.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/src/tensor.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/vulkan/vk_functions.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/src/vkcom/vulkan/vk_loader.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/opencl_kernels_dnn.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/layers/layers_common.avx.cpp.obj_FLAGS =  -msse3 -mssse3 -msse4.1 -mpopcnt -msse4.2 -mavx

# Custom defines: modules/dnn/CMakeFiles/opencv_dnn.dir/layers/layers_common.avx.cpp.obj_DEFINES = CV_CPU_DISPATCH_MODE=AVX;CV_CPU_COMPILE_SSE3=1;CV_CPU_COMPILE_SSSE3=1;CV_CPU_COMPILE_SSE4_1=1;CV_CPU_COMPILE_POPCNT=1;CV_CPU_COMPILE_SSE4_2=1;CV_CPU_COMPILE_AVX=1

# Custom flags: modules/dnn/CMakeFiles/opencv_dnn.dir/opencv_dnn_main.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/dnn/precomp.hpp"

