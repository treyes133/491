# CMAKE generated file: DO NOT EDIT!
# Generated by "MinGW Makefiles" Generator, CMake Version 3.6

# compile CXX with C:/MinGW/bin/g++.exe
# compile RC with C:/MinGW/bin/windres.exe
CXX_FLAGS =    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -Wno-missing-field-initializers -fdiagnostics-show-option -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -mfpmath=sse -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG   -std=c++11

CXX_DEFINES = -DCVAPI_EXPORTS -D_USE_MATH_DEFINES -D__OPENCV_BUILD=1 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS

CXX_INCLUDES = @CMakeFiles/opencv_gapi.dir/includes_CXX.rsp

RC_FLAGS =    

RC_DEFINES = -DCVAPI_EXPORTS -D_USE_MATH_DEFINES -D__OPENCV_BUILD=1 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS

RC_INCLUDES = -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\final -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\gapi\src -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\gapi\include -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\final\modules\gapi -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\core\include -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\opencv\modules\imgproc\include -IC:\Users\Tomas\Documents\GitHub\491\panorama\opencv_build\final\3rdparty\ade\ade-0.1.1d\sources\ade\include 

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/gapi_priv.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/gmat.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/garray.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/gscalar.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/gkernel.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/gbackend.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/gproto.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/gnode.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/gcall.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/gcomputation.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/operators.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/kernels_core.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/api/kernels_imgproc.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/gmodel.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/gmodelbuilder.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/gislandmodel.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/gcompiler.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/gcompiled.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/passes/helpers.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/passes/dump_dot.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/passes/islands.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/passes/meta.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/passes/kernels.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/passes/exec.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/executor/gexecutor.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/cpu/gcpubackend.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/cpu/gcpukernel.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/cpu/gcpuimgproc.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/cpu/gcpucore.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/fluid/gfluidbuffer.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/fluid/gfluidbackend.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/fluid/gfluidimgproc.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/fluid/gfluidimgproc_func.dispatch.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/fluid/gfluidcore.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/ocl/goclbackend.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/ocl/goclkernel.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/ocl/goclimgproc.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/ocl/goclcore.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/common/gcompoundbackend.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/src/backends/common/gcompoundkernel.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/backends/fluid/gfluidimgproc_func.sse4_1.cpp.obj_FLAGS =  -msse3 -mssse3 -msse4.1

# Custom defines: modules/gapi/CMakeFiles/opencv_gapi.dir/backends/fluid/gfluidimgproc_func.sse4_1.cpp.obj_DEFINES = CV_CPU_DISPATCH_MODE=SSE4_1;CV_CPU_COMPILE_SSE3=1;CV_CPU_COMPILE_SSSE3=1;CV_CPU_COMPILE_SSE4_1=1

# Custom flags: modules/gapi/CMakeFiles/opencv_gapi.dir/opencv_gapi_main.cpp.obj_FLAGS =  -Winvalid-pch  -include "C:/Users/Tomas/Documents/GitHub/491/panorama/opencv_build/final/modules/gapi/precomp.hpp"

